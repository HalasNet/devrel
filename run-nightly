#!/bin/sh

set -e

REPORT_FAIL=
DIR="${1:-PWD}"
# ./demos/hello-world

echo "Checking license headers"
../tools/go/bin/addlicense -check $DIR || REPORT_FAIL=$REPORT_FAIL"LIC "

echo "Java linting"
JAVA_FILES=`find $DIR -type f -name "*.java"`
[ -z "$JAVA_FILES" ] || java -jar ../tools/java/google-java-format-1.8-all-deps.jar --dry-run --set-exit-if-changed $JAVA_FILES || REPORT_FAIL=$REPORT_FAIL"JAVA "

npm i --silent

echo "Starting markdown linting"
npx remark $DIR -f || REPORT_FAIL=$REPORT_FAIL"MD "

echo "JS linting"
APIGEE_JS_FILES=`find $DIR -type f -wholename "*resources/jsc/*.js"`
[ -z "$APIGEE_JS_FILES" ] || npx -q eslint -c .eslintrc-jsc.yml $APIGEE_JS_FILES || REPORT_FAIL=$REPORT_FAIL"JS "

NODE_JS_FILES=`find $DIR -type d \( -path "*resources/jsc/*" -o -path "*/node_modules/*" \) -prune -o -name '*.js' -print`
[ -z "$NODE_JS_FILES" ] || npx -q eslint -c .eslintrc-node.yml $NODE_JS_FILES || REPORT_FAIL=$REPORT_FAIL"NODE "

if test -f "nightly"; then
  ./nightly || REPORT_FAIL=$REPORT_FAIL$D" "
fi

for D in `ls demos`
do
  echo "Running nightly on /demos/"$D
  (cd ./demos/$D && ./nightly) || REPORT_FAIL=$REPORT_FAIL$D" "
done

for D in `ls labs`
do
  echo "Running nightly on /labs/"$D
  (cd ./labs/$D && ./nightly) || REPORT_FAIL=$REPORT_FAIL$D" "
done

for D in `ls tools`
do
  echo "Running nightly on /tools/"$D
  (cd ./tools/$D && ./nightly) || REPORT_FAIL=$REPORT_FAIL$D" "
done

echo "Failures="$REPORT_FAIL

[ -z "$REPORT_FAIL" ] || exit 1
